In the system development, there are number of methodologies, known as SDLC (System Development Life Cycle), which can be applied such 
as Waterfall, Evolutionary Development and Component-Based Software Engineering. The selected-approach reflects the success of the system.

In the waterfall model, the system development process cascades from one phase to another.
It comprises six phases, namely:
1.Phase one : System Planning
2.Phase two : Problem Analysis
3.Phase three : System Design
4.Phase four : System Implementation
5.Phase five : System Testing
6.Phase six : Operation and Maintenance

In Figure 1 shows the waterfall sequential model from one phase to the next in a cascading method.It means the following phase should
not start until the previous phase has finished. For instance, one first completes systems planning, which are set in stone. 
When the requirements are fully completed,one proceeds to problem analysis. Next, after the problem analyses are fully completed, 
it goes to system design. When the design is fully completed, a system implementation of that design is made by coders. 
During the final life-cycle phase, the software is put into use. Errors and omissions are discovered.Therefore, the waterfall model
maintains that one should move to a phase only when itâ€™s proceeding phase is completed and perfected.

COMPARITIVE STUDY:-
  1.Socket programming:-

Sockets can be thought of as endpoints in a communication channel that is bi-directional, and establishes communication between a 
server and one or more clients. Here, we set up a socket on each end and allow a client to interact with other clients via the server. 
The socket on the server side associates itself with some hardware port on the server side. Any client that has a socket associated with 
the same port can communicate with the server socket.

2.Multi-Threading:-

A thread is sub process that runs a set of commands individually of any other thread. So, every time a user connects to the server,
a separate thread is created for that user and communication from server to client takes place along individual threads based on socket 
objects created for the sake of identity of each client.
We will require two scripts to establish this chat room. One to keep the serving running, and another that every client should run in
order to connect to the server.

Server Side Script:-

The server side script will attempt to establish a socket and bind it to an IP address and port specified by the user 
(windows users might have to make an exception for the specified port number in their firewall settings, or can rather use a port that 
is already open). The script will then stay open and receive connection requests, and will append respective socket objects to a list 
to keep track of active connections. Every time a user connects,a separate thread will be created for that user.
In each thread, the server awaits a message, and sends that message to other users currently on the chat. If the server encounters 
an error while trying to receive a message from a particular thread, it will exit that thread.
                            
